{"remainingRequest":"/home/zwnsyw/warehouse/Vue/SuperMall/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/zwnsyw/warehouse/Vue/SuperMall/src/views/detail/Detail.vue?vue&type=style&index=0&id=117d0e76&scoped=true&lang=css&","dependencies":[{"path":"/home/zwnsyw/warehouse/Vue/SuperMall/src/views/detail/Detail.vue","mtime":1580889209955},{"path":"/home/zwnsyw/warehouse/Vue/SuperMall/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/zwnsyw/warehouse/Vue/SuperMall/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/zwnsyw/warehouse/Vue/SuperMall/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/zwnsyw/warehouse/Vue/SuperMall/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/zwnsyw/warehouse/Vue/SuperMall/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojZGV0YWlsewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICB6LWluZGV4OiA5OwogIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgaGVpZ2h0OiAxMDB2aDsKfQouY29udGVudHsKICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDQ0cHggLSA0OXB4KTsKfQouZGV0YWlsbmF2YmFyewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogIHotaW5kZXg6IDk7Cn0K"},{"version":3,"sources":["Detail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Detail.vue","sourceRoot":"src/views/detail","sourcesContent":["<template>\n  <div id= \"detail\">\n   <DetailNavBar class=\"detailnavbar\" @titleClick='titleClick' ref=\"detailNav\"></DetailNavBar>\n\n   <scroll class=\"content\" ref=\"scroll\" @scroll='contentScroll' :probe-type=\"3\">\n     <!-- 属性：topImages     传值： top-images -->\n     <DetailSwiper :top-images = \"topImages\" ></DetailSwiper>\n   <DetailBaseInfo  :goods = \"goods\"></DetailBaseInfo>\n   <DetailShopInfo :shop='shop'></DetailShopInfo>\n   <DetailGoodsInfo :detail-info='detailInfo' @imageLoad='imageLoad'></DetailGoodsInfo>\n   <DetailParamInfo  ref=\"params\" :paramInfo=\"paramInfo\"></DetailParamInfo>\n   <DetailCommentInfo ref='comment' :commentInfo = 'commentInfo'></DetailCommentInfo>\n   <GoodsList ref=\"recommend\" :goods='recommends'></GoodsList>\n   </scroll>\n\n   <DetailBottomBar></DetailBottomBar>\n\n   <BackTop @click.native='backClick' v-show=\"isShowBackTop\"></BackTop >\n\n  </div>\n</template>\n\n<script>\nimport DetailNavBar from './childComps/DetailNavBar'\nimport DetailSwiper from './childComps/DetailSwiper'\nimport DetailBaseInfo from './childComps/DetailBaseInfo'\nimport DetailShopInfo from './childComps/DetailShopInfo'\nimport DetailGoodsInfo from'./childComps/DetailGoodsInfo'\nimport DetailParamInfo from './childComps/DetailParamInfo'\nimport DetailCommentInfo from \"./childComps/DetailCommentInfo\"\nimport DetailBottomBar from './childComps/DetailBottomBar'\n\nimport GoodsList from 'components/content/goods/GoodsList'\n\nimport Scroll from \"components/common/scroll/Scroll\"\n\n\n//不是组件，只是方法，只需要导入就可以吧使用，不需要在components里面注册\nimport {getDetail, Goods,Shop,GoodsParam,getRecommend} from 'network/detail'\n\nimport {debounce} from 'common/utiles'\nimport {itemListenerMixin, backTopMixin} from 'common/mixin'\n\nexport default {\n  name: \"Detail\",\n  \n  data() {\n    return {\n      iid: null,\n      topImages: [],\n      goods: {},\n      shop:{},\n      detailInfo:{},\n      paramInfo:{},\n      commentInfo:{},\n      recommends: [],\n       itemImgListener:null,\n       themTopYs: [],\n       getThemTopY: null,\n       currentIndex: null\n      \n    }\n  },\n  components:{\n    DetailNavBar,\n    DetailSwiper,\n    Goods,\n    DetailBaseInfo,\n    DetailShopInfo,\n    Scroll,\n    DetailGoodsInfo,\n    DetailParamInfo,\n    DetailCommentInfo,\n    GoodsList,\n    DetailBottomBar\n  },\n  mixins: [itemListenerMixin , backTopMixin],\n  created() {\n    // 1. 保存传入的iid\n    console.log(\"bb\",this.$route.params)\n    this.iid = this.$route.params.iid\n\n    // 2.根据iid请求详情数据\n    getDetail(this.iid).then(res => {\n      console.log(res)\n          // 1. 轮播图数据\n          const data = res.result;\n      this.topImages = data.itemInfo.topImages\n          // 2.获取商品信息\n      this.goods = new Goods(data.itemInfo, data.columns, data.shopInfo.services)\n    \n      // 3. 创建店铺信息的对象\n      this.shop = new Shop(data.shopInfo)  \n      \n      // 4. 保存商品的详情数据\n      this.detailInfo = data.detailInfo;\n\n      //5. 获取参数信息\n      this.paramInfo = new GoodsParam(data.itemParams.info, data.itemParams.rule)\n\n      // 6. 获取评论信息\n      if (data.rate.cRate !== 0){\n        this.commentInfo = data.rate.list[0]\n      }\n\n      // 7.请求推荐数据\n      getRecommend().then(res => {\n        console.log('详细页面的商品推荐数据',res)\n        this.recommends = res.data.list\n      })\n\n      // 8. 给getThemTopY赋值进行对this.themTopYs防抖\n      this.getThemTopY = debounce(()=>{\n        this.themTopYs = []\n        this.themTopYs.push(0)\n        this.themTopYs.push(this.$refs.params.$el.offsetTop)\n        this.themTopYs.push(this.$refs.comment.$el.offsetTop)\n        this.themTopYs.push(this.$refs.recommend.$el.offsetTop)\n        this.themTopYs.push(Number.MAX_VALUE)\n        // Number.MAX_VALUE     js中number类型的最大值\n        console.log(this.themTopYs)\n      })\n\n      // 第一次尝试获取值，值不对\n      // 原因： this.$refs.params.$el压根就还没渲染\n        // this.themTopYs = []\n        // this.themTopYs.push(0)\n        // this.themTopYs.push(this.$refs.params.$el.offsetTop)\n        // this.themTopYs.push(this.$refs.comment.$el.offsetTop)\n        // this.themTopYs.push(this.$refs.recommend.$el.offsetTop)\n        // console.log(this.themTopYs)\n\n    // 第二次尝试获取值，值不对\n    // 原因： DOM里面还没有图片，图片没计算在内\n      // this.$nextTick()根据最新的数据，渲染完成DOM的时候回调，但图片不一定渲染完成\n      // offsetTop值不对的情况，一般都是因为图片加载慢的问题\n      // this.$nextTick(()=>{\n      //    this.themTopYs = []\n      //   this.themTopYs.push(0)\n      //   this.themTopYs.push(this.$refs.params.$el.offsetTop)\n      //   this.themTopYs.push(this.$refs.comment.$el.offsetTop)\n      //   this.themTopYs.push(this.$refs.recommend.$el.offsetTop)\n      //   console.log(this.themTopYs)\n      // })\n    })\n  },\n  methods:{\n    imageLoad(){\n      this.$refs.scroll.refresh()\n      // 会调用多次，加个防抖函数\n      // this.themTopYs = []\n      //   this.themTopYs.push(0)\n      //   this.themTopYs.push(this.$refs.params.$el.offsetTop)\n      //   this.themTopYs.push(this.$refs.comment.$el.offsetTop)\n      //   this.themTopYs.push(this.$refs.recommend.$el.offsetTop)\n      //   console.log(this.themTopYs)\n      this.getThemTopY()\n\n    },\n    titleClick(index){\n      console.log(\"顶部标题：\",index)\n      this.$refs.scroll.scrollTo(0 ,  -this.themTopYs[index] , 500)\n    },\n    contentScroll(position){\n\n      this.isShowBackTop = (-position.y) > TOP_DISTANCE\n\n      // console.log(position)\n      const positionY = -position.y\n\n      //2. positionY和主题中的值进行对比\n      let length = this.themTopYs.length\n      // 2.1.1普通方法\n      // for(let i = 0; i < length; i++){\n      //   if(this.currentIndex !==i &&((i < length -1 && positionY >= this.themTopYs[i] && positionY < this.themTopYs[i + 1]) || (i === length -1 && positionY  >=  this.themTopYs[i]))){\n      //     this.currentIndex = i\n      //     // console.log(this.currentIndex)\n      //     this.$refs.detailNav.currentIndex = this.currentIndex\n      //   }\n      // }\n      // 2.2.1  hack（巧妙）的方法，在数组后面添加一个非常大的值，就可以变成通用比较，省略最后一次的特殊判断\n      for (let i = 0; i < length -1; i++){\n        if (this.currentIndex !==i && (positionY >= this.themTopYs[i] && positionY < this.themTopYs[i + 1])){\n          this.currentIndex = i\n          console.log(this.currentIndex)\n          this.$refs.detailNav.currentIndex = this.currentIndex\n        }\n      }\n    }\n  },\n  mounted(){\n    console.log(\"Detailmounted\")\n  //   let Refresh = debounce(this.$refs.scroll.refresh,100)\n\n  //    this.itemImgListener = ()=>{ Refresh() }\n\n  //   this.$bus.$on('itemImgLoad',this.itemImgListener )\n  },\n\n  destroyed() {\n    this.$bus.$off('itemImgLoad', this.itemImgListener)\n  },\n  // updated(){\n  //   // 一有数据变化就调用,重复调用的时候，每次进来先赋个空数组\n  //   this.themTopYs = []\n  //    this.themTopYs.push(0)\n  //   this.themTopYs.push(this.$refs.params.$el.offsetTop)\n  //   this.themTopYs.push(this.$refs.comment.$el.offsetTop)\n  //   this.themTopYs.push(this.$refs.recommend.$el.offsetTop)\n  //   console.log(this.themTopYs)\n  // }\n}\n</script>\n\n<style scoped>\n#detail{\n  position: relative;\n  z-index: 9;\n  background-color: #fff;\n  height: 100vh;\n}\n.content{\n  height: calc(100% - 44px - 49px);\n}\n.detailnavbar{\n  position: relative;\n  background-color: #fff;\n  z-index: 9;\n}\n</style>\n\n"]}]}